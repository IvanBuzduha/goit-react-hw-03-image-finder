{"version":3,"sources":["Components/ImageFinder/services/image-api.js","Components/ImageFinder/Loader/Loader.js","Components/ImageFinder/ImageGalleryItem/ImageGalleryItem.js","Components/ImageFinder/ImageGallery/ImageGallery.js","Components/ImageFinder/Modal/Modal.js","Components/ImageFinder/Button/Button.js","Components/ImageFinder/Searchbar/Searchbar.js","Components/ImageFinder/ImageFind.jsx","Components/App.js","index.js"],"names":["fetchImage","searchQuery","page","axios","get","then","res","status","Error","statusText","ImageLoader","type","color","height","width","Component","ImageGalleryItem","image","toggleModal","className","src","webformatURL","alt","tags","onClick","largeImageURL","ImageGallery","images","map","id","modalRoot","document","querySelector","Modal","handleKeyDown","event","key","target","currentTarget","props","window","addEventListener","this","removeEventListener","createPortal","Button","Searchbar","state","imageName","changeInput","evt","setState","value","handleSubmit","preventDefault","trim","onSubmit","toast","onChange","autoComplete","autoFocus","placeholder","ImageFind","totalHits","isLoading","showModal","activeButton","targetImage","onClickLoadMore","prevState","checkLoadMore","length","notify","message","searchImages","prevProps","data","hits","scrollTo","top","documentElement","scrollHeight","behavior","catch","error","finally","autoClose","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f01d3e54.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst API_Url = \"https://pixabay.com/api/\";\r\nconst API_KEY = \"21124678-0d24ae1c4ddebba156f36dfb4\";\r\n\r\nconst fetchImage = (searchQuery, page) => {\r\n  return axios\r\n    .get(\r\n      `${API_Url}?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n    )\r\n    .then((res) => {\r\n      if (res.status === 200) return res;\r\n      throw Error(`${res.status} ${res.statusText}`);\r\n    });\r\n};\r\n\r\nexport default fetchImage;\r\n","import React, { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nclass ImageLoader extends Component {\r\n  render() {\r\n    return <Loader type=\"Bars\" color=\"#3f51b5\" height={80} width={80} />;\r\n  }\r\n}\r\n\r\nexport default ImageLoader;\r\n","import React from 'react';\r\n\r\nconst ImageGalleryItem = ({ image, toggleModal }) => {\r\n\r\n    const onClick = () => {\r\n        toggleModal({\r\n            status: true,\r\n            src: image.largeImageURL,\r\n            alt: image.tags,\r\n        });\r\n    };\r\n        \r\n    return (\r\n        <li className=\"ImageGalleryItem\">\r\n            <img\r\n                src={image.webformatURL}\r\n                alt={image.tags}\r\n                className=\"ImageGalleryItem-image\"\r\n                onClick={onClick}\r\n            />\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default ImageGalleryItem;","import React from \"react\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ images, toggleModal }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map((image) => (\r\n        <ImageGalleryItem\r\n          image={image}\r\n          key={image.id}\r\n          toggleModal={toggleModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n    };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        if (event.key === 'Escape' || event.target === event.currentTarget) {\r\n            this.props.toggleModal({status: false});\r\n        }\r\n    };\r\n\r\n    render() {\r\n      \r\n        const { src, alt } = this.props;\r\n\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.handleKeyDown}>\r\n                <div className=\"Modal\">\r\n                    <img src={src} alt={alt} />\r\n                </div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n    };\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\n\r\nconst Button = ({ onClick }) => {\r\n        return (\r\n            <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n                Load More\r\n            </button>\r\n        );\r\n};\r\n\r\nexport default Button;","import { Component } from \"react\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    imageName: \"\",\r\n  };\r\n\r\n  changeInput = (evt) => {\r\n    this.setState({ imageName: evt.target.value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.imageName.trim() === \"\") {\r\n      toast(\"Enter your query\");\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state.imageName);\r\n    this.setState({ imageName: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <ImSearch />\r\n          </button>\r\n          <input\r\n            value={this.state.imageName}\r\n            onChange={this.changeInput}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React, { Component } from \"react\";\r\nimport fetchImage from \"../ImageFinder/services/image-api\";\r\nimport ImageLoader from \"../ImageFinder/Loader/Loader\";\r\nimport ImageGallery from \"../ImageFinder/ImageGallery/ImageGallery\";\r\nimport Modal from \"../ImageFinder/Modal/Modal\";\r\nimport Button from \"../ImageFinder/Button/Button\";\r\nimport Searchbar from \"../ImageFinder/Searchbar/Searchbar\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nclass ImageFind extends Component {\r\n  state = {\r\n    images: [],\r\n    totalHits: 0,\r\n    searchQuery: \"\",\r\n    page: 1,\r\n    isLoading: false,\r\n    showModal: false,\r\n    activeButton: false,\r\n    targetImage: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.searchImages();\r\n\r\n    //   fetchImage().then(({ data }) => {\r\n    //     this.setState({ data: data.hits });\r\n    //   });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { searchQuery, page } = this.state;\r\n\r\n    if (prevState.searchQuery !== searchQuery) {\r\n      this.searchImages(searchQuery, 1);\r\n      this.setState({ page: 1 });\r\n    }\r\n    if (prevState.page !== page) {\r\n      this.searchImages(searchQuery, page);\r\n    }\r\n  }\r\n  searchImages(searchQuery = \"\", page = 1) {\r\n    if (searchQuery !== \"\") {\r\n      this.setState({\r\n        isLoading: true,\r\n        notify: false,\r\n      });\r\n\r\n      fetchImage(searchQuery, page)\r\n        .then(({ data }) => {\r\n          if (page === 1) {\r\n            this.setState({\r\n              totalHits: data.totalHits,\r\n              images: data.hits,\r\n            });\r\n          } else {\r\n            this.setState((prevState) => ({\r\n              images: [...prevState.images, ...data.hits],\r\n            }));\r\n            window.scrollTo({\r\n              top: document.documentElement.scrollHeight,\r\n              behavior: \"smooth\",\r\n            });\r\n          }\r\n          this.checkLoadMore();\r\n        })\r\n        .catch((error) => this.setState({ error }))\r\n        .finally(() => this.setState({ isLoading: false }));\r\n    } else {\r\n      this.setState({\r\n        images: [],\r\n        activeButton: false,\r\n        message: \"Please input search request\",\r\n        notify: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit = (value) => {\r\n    this.setState({ searchQuery: value });\r\n  };\r\n\r\n  onClickLoadMore = () => {\r\n    this.setState((prevState) => ({\r\n      page: prevState.page + 1,\r\n    }));\r\n  };\r\n\r\n  checkLoadMore = () => {\r\n    const { totalHits, images } = this.state;\r\n\r\n    if (totalHits > images.length) {\r\n      this.setState({ activeButton: true });\r\n    } else {\r\n      this.setState({ activeButton: false });\r\n    }\r\n\r\n    if (!totalHits) {\r\n      this.setState({\r\n        message: \"Nothing was found. Try again.\",\r\n        notify: true,\r\n      });\r\n    } else {\r\n      this.setState({ notify: false });\r\n    }\r\n  };\r\n\r\n  toggleModal = ({ status, src, alt }) => {\r\n    if (status) {\r\n      this.setState({\r\n        targetImage: { src, alt },\r\n        showModal: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        targetImage: null,\r\n        showModal: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      images,\r\n      isLoading,\r\n      showModal,\r\n      targetImage,\r\n      activeButton,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.onSubmit} />\r\n        <ToastContainer autoClose={2000} />\r\n        {isLoading && <ImageLoader />}\r\n        {images.length > 0 && (\r\n          <ImageGallery images={images} toggleModal={this.toggleModal} />\r\n        )}\r\n        {showModal && (\r\n          <Modal\r\n            src={targetImage.src}\r\n            alt={targetImage.alt}\r\n            toggleModal={this.toggleModal}\r\n          />\r\n        )}\r\n        {activeButton && <Button onClick={this.onClickLoadMore} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageFind;\r\n\r\n// import axios from \"axios\";\r\n// import React, { Component } from \"react\";\r\n// class ImageFind extends Component {\r\n//   state = {\r\n//     hits: [],\r\n//   };\r\n//   componentDidMount() {\r\n//     axios\r\n//       .get(\r\n//         `https://pixabay.com/api/?key=21124678-0d24ae1c4ddebba156f36dfb4&q=yellow+flowers&image_type=photo`\r\n//       )\r\n//       .then((res) => {\r\n//         console.log(res.data.hits);\r\n//         this.setState({ hits: res.data.hits });\r\n//       });\r\n//   }\r\n//   render() {\r\n//     const { hits } = this.state;\r\n//     return (\r\n//       <>\r\n//         <ul>\r\n//           {hits.map(({ id, url, webformatURL }) => (\r\n//             <li key={id}>\r\n//               <img src={webformatURL} />{\" \"}\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default ImageFind;\r\n","// import React from \"react\";\r\n\r\nimport ImageFind from \"./ImageFinder/ImageFind\";\r\n\r\nconst App = () => (\r\n  <>\r\n    <ImageFind />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}